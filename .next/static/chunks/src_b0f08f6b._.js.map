{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/api/config.tsx"],"sourcesContent":["export const firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_API_KEY_FIREBASE,\r\n  authDomain: process.env.NEXT_PUBLIC_AUTHDOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_PROJECTID,\r\n  storageBucket: process.env.NEXT_PUBLIC_STORAGEBUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_MESSAGINGSENDERID,\r\n  appId: process.env.NEXT_PUBLIC_APPID,\r\n  measurementId: process.env.NEXT_PUBLIC_MEASUREMENTID,\r\n};\r\n\r\n\r\n"],"names":[],"mappings":";;;;AACU;AADH,MAAM,iBAAiB;IAC5B,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/firebaseClient.ts"],"sourcesContent":["'use client';\r\nimport { initializeApp, getApps, getApp, FirebaseApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"../app/api/config\";\r\n\r\n// Inicializa y exporta la instancia de la app de Firebase\r\nlet app: FirebaseApp;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApp();\r\n}\r\n\r\nexport { app };"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAFA;;;AAIA,0DAA0D;AAC1D,IAAI;AACJ,IAAI,CAAC,IAAA,8KAAO,IAAG,MAAM,EAAE;IACrB,MAAM,IAAA,oLAAa,EAAC,iJAAc;AACpC,OAAO;IACL,MAAM,IAAA,6KAAM;AACd","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///app/src/context/authContext.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { getAuth, onAuthStateChanged, signOut, User } from 'firebase/auth';\r\nimport { app } from '../lib/firebaseClient';\r\n\r\n// Definimos el tipo de usuario para el contexto\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  loading: boolean;\r\n  logout: () => Promise<void>;\r\n};\r\n\r\n// Creamos el contexto\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n  logout: async () => {},\r\n});\r\n\r\n// Hook para usar el contexto\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Proveedor del contexto de autenticaci贸n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Escuchamos cambios de sesi贸n de Firebase\r\n    const auth = getAuth(app);\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      setUser(firebaseUser);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Funci贸n para cerrar sesi贸n\r\n  const logout = async () => {\r\n    const auth = getAuth(app);\r\n    await signOut(auth);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAAA;AACA;;;AAHA;;;;AAYA,sBAAsB;AACtB,MAAM,4BAAc,IAAA,8KAAa,EAAkB;IACjD,MAAM;IACN,SAAS;IACT,QAAQ,WAAa;AACvB;AAGO,MAAM,UAAU;;IAAM,OAAA,IAAA,2KAAU,EAAC;AAAW;GAAtC;AAGN,MAAM,eAAe;QAAC,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,IAAA,0KAAS;kCAAC;YACR,2CAA2C;YAC3C,MAAM,OAAO,IAAA,wKAAO,EAAC,sIAAG;YACxB,MAAM,cAAc,IAAA,mLAAkB,EAAC;sDAAM,CAAC;oBAC5C,QAAQ;oBACR,WAAW;gBACb;;YACA;0CAAO,IAAM;;QACf;iCAAG,EAAE;IAEL,6BAA6B;IAC7B,MAAM,SAAS;QACb,MAAM,OAAO,IAAA,wKAAO,EAAC,sIAAG;QACxB,MAAM,IAAA,wKAAO,EAAC;QACd,QAAQ;IACV;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAO;kBAClD;;;;;;AAGP;IA1Ba;KAAA","debugId":null}}]
}