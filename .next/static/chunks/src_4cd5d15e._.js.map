{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/config.tsx"],"sourcesContent":["export const firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_API_KEY_FIREBASE,\r\n  authDomain: process.env.NEXT_PUBLIC_AUTHDOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_PROJECTID,\r\n  storageBucket: process.env.NEXT_PUBLIC_STORAGEBUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_MESSAGINGSENDERID,\r\n  appId: process.env.NEXT_PUBLIC_APPID,\r\n  measurementId: process.env.NEXT_PUBLIC_MEASUREMENTID,\r\n};\r\n\r\n\r\n"],"names":[],"mappings":";;;;AACU;AADH,MAAM,iBAAiB;IAC5B,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/firebaseClient.ts"],"sourcesContent":["'use client';\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { firebaseConfig } from \"../app/api/config\";\r\n\r\nexport function initFirebase() {\r\n  if (!getApps().length) {\r\n    initializeApp(firebaseConfig);\r\n  }\r\n}"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAFA;;;AAIO,SAAS;IACd,IAAI,CAAC,IAAA,8KAAO,IAAG,MAAM,EAAE;QACrB,IAAA,oLAAa,EAAC,iJAAc;IAC9B;AACF","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { initFirebase } from \"@/lib/firebaseClient\"; // Ajusta la ruta si es necesario\r\n\r\nexport default function LoginPage() {\r\n  useEffect(() => {\r\n    initFirebase();\r\n    const doLogin = async () => {\r\n      const auth = getAuth();\r\n      await signInWithEmailAndPassword(auth, \"juanhernandez@gmail.com\", \"123456\");\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const token = await user.getIdToken();\r\n        console.log(token); // <-- copia este string\r\n      } else {\r\n        console.error(\"No user is currently signed in.\");\r\n      }\r\n    };\r\n    doLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      Login page\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA,gOAAqD,iCAAiC;;;AAJtF;;;;AAMe,SAAS;;IACtB,IAAA,0KAAS;+BAAC;YACR,IAAA,+IAAY;YACZ,MAAM;+CAAU;oBACd,MAAM,OAAO,IAAA,wKAAO;oBACpB,MAAM,IAAA,2LAA0B,EAAC,MAAM,2BAA2B;oBAClE,MAAM,OAAO,KAAK,WAAW;oBAC7B,IAAI,MAAM;wBACR,MAAM,QAAQ,MAAM,KAAK,UAAU;wBACnC,QAAQ,GAAG,CAAC,QAAQ,wBAAwB;oBAC9C,OAAO;wBACL,QAAQ,KAAK,CAAC;oBAChB;gBACF;;YACA;QACF;8BAAG,EAAE;IAEL,qBACE,6LAAC;kBAAI;;;;;;AAIT;GAtBwB;KAAA","debugId":null}}]
}