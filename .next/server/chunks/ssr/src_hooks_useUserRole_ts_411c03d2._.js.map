{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/hooks/useUserRole.ts"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/authContext';\r\n\r\n// Hook para obtener el rol del usuario desde la API interna (PostgreSQL)\r\nexport function useUserRole() {\r\n  const { user } = useAuth();\r\n  const [role, setRole] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setRole(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    // Llama a tu API interna para obtener el rol por UID de Firebase\r\n    const fetchRole = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(`/api/user-role?uid=${user.uid}`);\r\n        const data = await res.json();\r\n        setRole(data.role || null);\r\n      } catch (err) {\r\n        setRole(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchRole();\r\n  }, [user]);\r\n\r\n  return { role, loading };\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAKO,SAAS;IACd,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,yIAAO;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAgB;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,MAAM;YACT,QAAQ;YACR,WAAW;YACX;QACF;QACA,iEAAiE;QACjE,MAAM,YAAY;YAChB,WAAW;YACX,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,KAAK,GAAG,EAAE;gBACxD,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,QAAQ,KAAK,IAAI,IAAI;YACvB,EAAE,OAAO,KAAK;gBACZ,QAAQ;YACV,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG;QAAC;KAAK;IAET,OAAO;QAAE;QAAM;IAAQ;AACzB","debugId":null}}]
}