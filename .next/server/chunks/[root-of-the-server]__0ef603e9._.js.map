{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/firebaseAdmin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\r\n\r\nexport function initFirebaseAdmin() {\r\n  if (!getApps().length) {\r\n    initializeApp({\r\n      credential: cert({\r\n        projectId: process.env.FIREBASE_PROJECT_ID,\r\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n        privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\r\n      }),\r\n    });\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,SAAS;IACd,IAAI,CAAC,IAAA,2JAAO,IAAG,MAAM,EAAE;QACrB,IAAA,iKAAa,EAAC;YACZ,YAAY,IAAA,wJAAI,EAAC;gBACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;gBAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YAChE;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ||\r\n  new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6IAAY;AAElB,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/requireRole.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { initFirebaseAdmin } from './firebaseAdmin';\r\nimport { prisma } from './prisma';\r\n\r\ninitFirebaseAdmin();\r\n\r\nexport async function requireAuth(request: Request) {\r\n  try {\r\n    const authHeader = request.headers.get('authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      return { error: NextResponse.json({ error: 'No autorizado (token faltante)' }, { status: 401 }) };\r\n    }\r\n    const idToken = authHeader.replace('Bearer ', '');\r\n    const decoded = await getAuth().verifyIdToken(idToken);\r\n    const user = await prisma.user.findUnique({ where: { firebaseUid: decoded.uid }, select: { id: true, role: true, active: true } });\r\n    if (!user) return { error: NextResponse.json({ error: 'No autorizado (usuario no encontrado)' }, { status: 401 }) };\r\n    if (!user.active) return { error: NextResponse.json({ error: 'Usuario inactivo' }, { status: 403 }) };\r\n    return { user };\r\n  } catch (error) {\r\n    return { error: NextResponse.json({ error: 'No autorizado (token inv√°lido)' }, { status: 401 }) };\r\n  }\r\n}\r\n\r\nexport async function requireRole(request: Request, roles: Array<'ADMIN'|'DOCENTE'|'STUDENT'>) {\r\n  const res = await requireAuth(request);\r\n  if ('error' in res) return res.error;\r\n  const { user } = res as any;\r\n  if (!roles.includes(user.role)) return NextResponse.json({ error: 'No autorizado (rol insuficiente)' }, { status: 403 });\r\n  return user;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAA,kJAAiB;AAEV,eAAe,YAAY,OAAgB;IAChD,IAAI;QACF,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,WAAW,UAAU,CAAC,YAAY;YACpD,OAAO;gBAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAiC,GAAG;oBAAE,QAAQ;gBAAI;YAAG;QAClG;QACA,MAAM,UAAU,WAAW,OAAO,CAAC,WAAW;QAC9C,MAAM,UAAU,MAAM,IAAA,6JAAO,IAAG,aAAa,CAAC;QAC9C,MAAM,OAAO,MAAM,gIAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE,aAAa,QAAQ,GAAG;YAAC;YAAG,QAAQ;gBAAE,IAAI;gBAAM,MAAM;gBAAM,QAAQ;YAAK;QAAE;QAChI,IAAI,CAAC,MAAM,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwC,GAAG;gBAAE,QAAQ;YAAI;QAAG;QAClH,IAAI,CAAC,KAAK,MAAM,EAAE,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QAAG;QACpG,OAAO;YAAE;QAAK;IAChB,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QAAG;IAClG;AACF;AAEO,eAAe,YAAY,OAAgB,EAAE,KAAyC;IAC3F,MAAM,MAAM,MAAM,YAAY;IAC9B,IAAI,WAAW,KAAK,OAAO,IAAI,KAAK;IACpC,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,IAAI,CAAC,MAAM,QAAQ,CAAC,KAAK,IAAI,GAAG,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAmC,GAAG;QAAE,QAAQ;IAAI;IACtH,OAAO;AACT","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/estudiante/horario/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { requireAuth } from '@/lib/requireRole';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport async function GET(request: Request) {\r\n  const auth = await requireAuth(request);\r\n  if ('error' in auth) return auth.error;\r\n  const { user } = auth as any;\r\n\r\n  try {\r\n    // Buscar el grado del estudiante\r\n    const gradoEst = await prisma.gradoEstudiante.findFirst({ where: { estudianteId: user.id }, include: { grado: true } });\r\n    if (!gradoEst) return NextResponse.json([], { status: 200 });\r\n\r\n    // Obtener horarios del grado y ciclo actual\r\n    const horarios = await prisma.horario.findMany({ where: { gradoId: gradoEst.gradoId }, include: { materia: true, aula: true } });\r\n\r\n    // Mapear a estructura simple\r\n    const result = horarios.map(h => ({ dia: h.dia, hora: `${h.horaInicio} - ${h.horaFin}`, materia: h.materia.nombre, aula: h.aula?.nombre || '' }));\r\n\r\n    return NextResponse.json(result);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Error al obtener horario' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,OAAO,MAAM,IAAA,0IAAW,EAAC;IAC/B,IAAI,WAAW,MAAM,OAAO,KAAK,KAAK;IACtC,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,IAAI;QACF,iCAAiC;QACjC,MAAM,WAAW,MAAM,gIAAM,CAAC,eAAe,CAAC,SAAS,CAAC;YAAE,OAAO;gBAAE,cAAc,KAAK,EAAE;YAAC;YAAG,SAAS;gBAAE,OAAO;YAAK;QAAE;QACrH,IAAI,CAAC,UAAU,OAAO,gJAAY,CAAC,IAAI,CAAC,EAAE,EAAE;YAAE,QAAQ;QAAI;QAE1D,4CAA4C;QAC5C,MAAM,WAAW,MAAM,gIAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YAAE,OAAO;gBAAE,SAAS,SAAS,OAAO;YAAC;YAAG,SAAS;gBAAE,SAAS;gBAAM,MAAM;YAAK;QAAE;QAE9H,6BAA6B;QAC7B,MAAM,SAAS,SAAS,GAAG,CAAC,CAAA,IAAK,CAAC;gBAAE,KAAK,EAAE,GAAG;gBAAE,MAAM,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;gBAAE,SAAS,EAAE,OAAO,CAAC,MAAM;gBAAE,MAAM,EAAE,IAAI,EAAE,UAAU;YAAG,CAAC;QAE/I,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}