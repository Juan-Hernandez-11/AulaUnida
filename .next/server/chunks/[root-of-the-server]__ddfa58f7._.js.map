{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/firebaseAdmin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\r\n\r\nexport function initFirebaseAdmin() {\r\n  if (!getApps().length) {\r\n    initializeApp({\r\n      credential: cert({\r\n        projectId: process.env.FIREBASE_PROJECT_ID,\r\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n        privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\r\n      }),\r\n    });\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,SAAS;IACd,IAAI,CAAC,IAAA,2JAAO,IAAG,MAAM,EAAE;QACrB,IAAA,iKAAa,EAAC;YACZ,YAAY,IAAA,wJAAI,EAAC;gBACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;gBAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YAChE;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ||\r\n  new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6IAAY;AAElB,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/requireRole.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { initFirebaseAdmin } from './firebaseAdmin';\r\nimport { prisma } from './prisma';\r\n\r\ninitFirebaseAdmin();\r\n\r\nexport async function requireAuth(request: Request) {\r\n  try {\r\n    const authHeader = request.headers.get('authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      return { error: NextResponse.json({ error: 'No autorizado (token faltante)' }, { status: 401 }) };\r\n    }\r\n    const idToken = authHeader.replace('Bearer ', '');\r\n    const decoded = await getAuth().verifyIdToken(idToken);\r\n    const user = await prisma.user.findUnique({ where: { firebaseUid: decoded.uid }, select: { id: true, role: true, active: true } });\r\n    if (!user) return { error: NextResponse.json({ error: 'No autorizado (usuario no encontrado)' }, { status: 401 }) };\r\n    if (!user.active) return { error: NextResponse.json({ error: 'Usuario inactivo' }, { status: 403 }) };\r\n    return { user };\r\n  } catch (error) {\r\n    return { error: NextResponse.json({ error: 'No autorizado (token inv치lido)' }, { status: 401 }) };\r\n  }\r\n}\r\n\r\nexport async function requireRole(request: Request, roles: Array<'ADMIN'|'DOCENTE'|'STUDENT'>) {\r\n  const res = await requireAuth(request);\r\n  if ('error' in res) return res.error;\r\n  const { user } = res as any;\r\n  if (!roles.includes(user.role)) return NextResponse.json({ error: 'No autorizado (rol insuficiente)' }, { status: 403 });\r\n  return user;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAA,kJAAiB;AAEV,eAAe,YAAY,OAAgB;IAChD,IAAI;QACF,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,WAAW,UAAU,CAAC,YAAY;YACpD,OAAO;gBAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAiC,GAAG;oBAAE,QAAQ;gBAAI;YAAG;QAClG;QACA,MAAM,UAAU,WAAW,OAAO,CAAC,WAAW;QAC9C,MAAM,UAAU,MAAM,IAAA,6JAAO,IAAG,aAAa,CAAC;QAC9C,MAAM,OAAO,MAAM,gIAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE,aAAa,QAAQ,GAAG;YAAC;YAAG,QAAQ;gBAAE,IAAI;gBAAM,MAAM;gBAAM,QAAQ;YAAK;QAAE;QAChI,IAAI,CAAC,MAAM,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwC,GAAG;gBAAE,QAAQ;YAAI;QAAG;QAClH,IAAI,CAAC,KAAK,MAAM,EAAE,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QAAG;QACpG,OAAO;YAAE;QAAK;IAChB,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QAAG;IAClG;AACF;AAEO,eAAe,YAAY,OAAgB,EAAE,KAAyC;IAC3F,MAAM,MAAM,MAAM,YAAY;IAC9B,IAAI,WAAW,KAAK,OAAO,IAAI,KAAK;IACpC,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,IAAI,CAAC,MAAM,QAAQ,CAAC,KAAK,IAAI,GAAG,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAmC,GAAG;QAAE,QAAQ;IAAI;IACtH,OAAO;AACT","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/estudiante/notas/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { requireAuth } from '@/lib/requireRole';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport async function GET(request: Request) {\r\n  const auth = await requireAuth(request);\r\n  if ('error' in auth) return auth.error;\r\n  const { user } = auth as any;\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const estudianteIdParam = url.searchParams.get('estudianteId');\r\n    const materiaIdParam = url.searchParams.get('materiaId');\r\n    const periodoIdParam = url.searchParams.get('periodoId');\r\n\r\n    // Si no vienen params, devolver todas las notas del estudiante autenticado\r\n    if (!estudianteIdParam && !materiaIdParam && !periodoIdParam) {\r\n      const notas = await prisma.notaMateriaPeriodo.findMany({ where: { estudianteId: user.id }, include: { materia: true, periodo: true } });\r\n      return NextResponse.json(notas);\r\n    }\r\n\r\n    // Si vienen params (estudianteId,materiaId,periodoId) -> c치lculo de promedio (verifica permisos)\r\n    if (estudianteIdParam && materiaIdParam && periodoIdParam) {\r\n      const estudianteId = Number(estudianteIdParam);\r\n      const materiaId = Number(materiaIdParam);\r\n      const periodoId = Number(periodoIdParam);\r\n      if (!estudianteId || !materiaId || !periodoId) return NextResponse.json({ error: 'Faltan par치metros' }, { status: 400 });\r\n\r\n      if (user.role === 'STUDENT' && user.id !== estudianteId) {\r\n        return NextResponse.json({ error: 'No autorizado' }, { status: 403 });\r\n      }\r\n\r\n      const notas = await prisma.notaMateriaPeriodo.findMany({ where: { estudianteId, materiaId, periodoId }, select: { valor: true } });\r\n      if (!notas.length) return NextResponse.json({ promedio: null, cantidad: 0 });\r\n      const suma = notas.reduce((acc, n) => acc + n.valor, 0);\r\n      const promedio = suma / notas.length;\r\n      return NextResponse.json({ promedio, cantidad: notas.length });\r\n    }\r\n\r\n    return NextResponse.json({ error: 'Par치metros insuficientes' }, { status: 400 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Error al obtener notas' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,OAAO,MAAM,IAAA,0IAAW,EAAC;IAC/B,IAAI,WAAW,MAAM,OAAO,KAAK,KAAK;IACtC,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,IAAI;QACF,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;QAC/B,MAAM,oBAAoB,IAAI,YAAY,CAAC,GAAG,CAAC;QAC/C,MAAM,iBAAiB,IAAI,YAAY,CAAC,GAAG,CAAC;QAC5C,MAAM,iBAAiB,IAAI,YAAY,CAAC,GAAG,CAAC;QAE5C,2EAA2E;QAC3E,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,gBAAgB;YAC5D,MAAM,QAAQ,MAAM,gIAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC;gBAAE,OAAO;oBAAE,cAAc,KAAK,EAAE;gBAAC;gBAAG,SAAS;oBAAE,SAAS;oBAAM,SAAS;gBAAK;YAAE;YACrI,OAAO,gJAAY,CAAC,IAAI,CAAC;QAC3B;QAEA,iGAAiG;QACjG,IAAI,qBAAqB,kBAAkB,gBAAgB;YACzD,MAAM,eAAe,OAAO;YAC5B,MAAM,YAAY,OAAO;YACzB,MAAM,YAAY,OAAO;YACzB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,WAAW,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;YAEtH,IAAI,KAAK,IAAI,KAAK,aAAa,KAAK,EAAE,KAAK,cAAc;gBACvD,OAAO,gJAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAgB,GAAG;oBAAE,QAAQ;gBAAI;YACrE;YAEA,MAAM,QAAQ,MAAM,gIAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC;gBAAE,OAAO;oBAAE;oBAAc;oBAAW;gBAAU;gBAAG,QAAQ;oBAAE,OAAO;gBAAK;YAAE;YAChI,IAAI,CAAC,MAAM,MAAM,EAAE,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,UAAU;gBAAM,UAAU;YAAE;YAC1E,MAAM,OAAO,MAAM,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK,EAAE;YACrD,MAAM,WAAW,OAAO,MAAM,MAAM;YACpC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE;gBAAU,UAAU,MAAM,MAAM;YAAC;QAC9D;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF,EAAE,OAAO,OAAO;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}