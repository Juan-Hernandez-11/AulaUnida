{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///app/src/hooks/useUserRole.ts"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/authContext';\r\n\r\n// Hook para obtener el rol del usuario desde la API interna (PostgreSQL)\r\nexport function useUserRole() {\r\n  const { user } = useAuth();\r\n  const [role, setRole] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setRole(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    // Llama a tu API interna para obtener el rol por UID de Firebase\r\n    const fetchRole = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(`/api/user-role?uid=${user.uid}`);\r\n        const data = await res.json();\r\n        setRole(data.role || null);\r\n      } catch (err) {\r\n        setRole(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchRole();\r\n  }, [user]);\r\n\r\n  return { role, loading };\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;AAFA;;;AAKO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,4IAAO;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAgB;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,IAAA,0KAAS;iCAAC;YACR,IAAI,CAAC,MAAM;gBACT,QAAQ;gBACR,WAAW;gBACX;YACF;YACA,iEAAiE;YACjE,MAAM;mDAAY;oBAChB,WAAW;oBACX,IAAI;wBACF,MAAM,MAAM,MAAM,MAAM,AAAC,sBAA8B,OAAT,KAAK,GAAG;wBACtD,MAAM,OAAO,MAAM,IAAI,IAAI;wBAC3B,QAAQ,KAAK,IAAI,IAAI;oBACvB,EAAE,OAAO,KAAK;wBACZ,QAAQ;oBACV,SAAU;wBACR,WAAW;oBACb;gBACF;;YACA;QACF;gCAAG;QAAC;KAAK;IAET,OAAO;QAAE;QAAM;IAAQ;AACzB;GA5BgB;;QACG,4IAAO","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { app } from \"../../lib/firebaseClient\";\r\nimport { useAuth } from \"../../context/authContext\";\r\nimport { useUserRole } from \"../../hooks/useUserRole\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const { user, loading, logout } = useAuth();\r\n  const { role, loading: roleLoading } = useUserRole();\r\n  const router = useRouter();\r\n\r\n\r\n  // Si el usuario ya está autenticado y tiene rol, redirige automáticamente\r\n  useEffect(() => {\r\n    if (user && !loading && role && !roleLoading) {\r\n      if (role === 'ADMIN' || role === 'admin') router.replace('/admin');\r\n      else if (role === 'DOCENTE' || role === 'docente') router.replace('/docente');\r\n      else if (role === 'STUDENT' || role === 'estudiante') router.replace('/estudiante');\r\n    }\r\n  }, [user, loading, role, roleLoading, router]);\r\n\r\n  // (La redirección ya está incluida arriba)\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    try {\r\n      const auth = getAuth(app);\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      // El useEffect se encargará de redirigir\r\n    } catch (err: any) {\r\n      setError(err.message || \"Error al iniciar sesión\");\r\n    }\r\n  };\r\n\r\n\r\n  // Mostrar loading si está cargando la sesión\r\n  if (loading || roleLoading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n  // Si ya hay usuario y rol, mostrar mensaje de redirección\r\n  if (user && role) {\r\n    return <div>Redirigiendo...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Iniciar Sesión</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Ingresar</button>\r\n        {error && <div className=\"login-error\">{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAWe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAA,4IAAO;IACzC,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,IAAA,6IAAW;IAClD,MAAM,SAAS,IAAA,kJAAS;IAGxB,0EAA0E;IAC1E,IAAA,0KAAS;+BAAC;YACR,IAAI,QAAQ,CAAC,WAAW,QAAQ,CAAC,aAAa;gBAC5C,IAAI,SAAS,WAAW,SAAS,SAAS,OAAO,OAAO,CAAC;qBACpD,IAAI,SAAS,aAAa,SAAS,WAAW,OAAO,OAAO,CAAC;qBAC7D,IAAI,SAAS,aAAa,SAAS,cAAc,OAAO,OAAO,CAAC;YACvE;QACF;8BAAG;QAAC;QAAM;QAAS;QAAM;QAAa;KAAO;IAE7C,2CAA2C;IAE3C,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QACT,IAAI;YACF,MAAM,OAAO,IAAA,wKAAO,EAAC,sIAAG;YACxB,MAAM,IAAA,2LAA0B,EAAC,MAAM,OAAO;QAC9C,yCAAyC;QAC3C,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B;IACF;IAGA,6CAA6C;IAC7C,IAAI,WAAW,aAAa;QAC1B,qBAAO,6LAAC;sBAAI;;;;;;IACd;IACA,0DAA0D;IAC1D,IAAI,QAAQ,MAAM;QAChB,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;wBACtC,QAAQ;;;;;;kCAEV,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;wBACzC,QAAQ;;;;;;kCAEV,6LAAC;wBAAO,MAAK;kCAAS;;;;;;oBACrB,uBAAS,6LAAC;wBAAI,WAAU;kCAAe;;;;;;;;;;;;;;;;;;AAIhD;GAjEwB;;QAIY,4IAAO;QACF,6IAAW;QACnC,kJAAS;;;KANF","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}