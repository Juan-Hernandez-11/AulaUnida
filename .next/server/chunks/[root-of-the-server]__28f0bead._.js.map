{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/admin/ciclos/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// GET: Devuelve todos los ciclos (id, nombre, fechaInicio, fechaFin, cerrado)\r\nexport async function GET() {\r\n  try {\r\n    const ciclos = await prisma.ciclo.findMany({\r\n      select: { id: true, nombre: true, fechaInicio: true, fechaFin: true, cerrado: true },\r\n      orderBy: { fechaInicio: 'desc' },\r\n    });\r\n    return NextResponse.json(ciclos);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Error al obtener ciclos' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// POST: Crea un ciclo. Body: { nombre, fechaInicio, fechaFin }\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { nombre, fechaInicio, fechaFin } = await request.json();\r\n    if (\r\n      typeof nombre !== 'string' || !nombre.trim() ||\r\n      !fechaInicio || !fechaFin\r\n    ) {\r\n      return NextResponse.json({ error: 'Faltan campos obligatorios o tipos incorrectos' }, { status: 400 });\r\n    }\r\n    const inicio = new Date(fechaInicio);\r\n    const fin = new Date(fechaFin);\r\n    if (isNaN(inicio.getTime()) || isNaN(fin.getTime())) {\r\n      return NextResponse.json({ error: 'Fechas inválidas' }, { status: 400 });\r\n    }\r\n    if (inicio >= fin) {\r\n      return NextResponse.json({ error: 'La fecha de inicio debe ser anterior a la de fin.' }, { status: 400 });\r\n    }\r\n    // Validar unicidad de nombre\r\n    const existe = await prisma.ciclo.findFirst({ where: { nombre: nombre.trim() } });\r\n    if (existe) {\r\n      return NextResponse.json({ error: 'Ya existe un ciclo con ese nombre.' }, { status: 409 });\r\n    }\r\n    const ciclo = await prisma.ciclo.create({\r\n      data: { nombre: nombre.trim(), fechaInicio: inicio, fechaFin: fin },\r\n      select: { id: true, nombre: true, fechaInicio: true, fechaFin: true, cerrado: true },\r\n    });\r\n    return NextResponse.json(ciclo);\r\n  } catch (error: any) {\r\n    if (error.code && error.code.startsWith('P')) {\r\n      return NextResponse.json({ error: 'Error de base de datos: ' + error.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json({ error: 'Error al crear ciclo' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// PUT: Edita un ciclo. Body: { id, nombre, fechaInicio, fechaFin, cerrado }\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const { id, nombre, fechaInicio, fechaFin, cerrado } = await request.json();\r\n    if (\r\n      typeof id !== 'number' || isNaN(id) ||\r\n      typeof nombre !== 'string' || !nombre.trim() ||\r\n      !fechaInicio || !fechaFin\r\n    ) {\r\n      return NextResponse.json({ error: 'Faltan campos obligatorios o tipos incorrectos' }, { status: 400 });\r\n    }\r\n    const inicio = new Date(fechaInicio);\r\n    const fin = new Date(fechaFin);\r\n    if (isNaN(inicio.getTime()) || isNaN(fin.getTime())) {\r\n      return NextResponse.json({ error: 'Fechas inválidas' }, { status: 400 });\r\n    }\r\n    if (inicio >= fin) {\r\n      return NextResponse.json({ error: 'La fecha de inicio debe ser anterior a la de fin.' }, { status: 400 });\r\n    }\r\n    // Validar unicidad de nombre (excluyendo el propio ciclo)\r\n    const existe = await prisma.ciclo.findFirst({ where: { nombre: nombre.trim(), NOT: { id } } });\r\n    if (existe) {\r\n      return NextResponse.json({ error: 'Ya existe un ciclo con ese nombre.' }, { status: 409 });\r\n    }\r\n    const ciclo = await prisma.ciclo.update({\r\n      where: { id },\r\n      data: { nombre: nombre.trim(), fechaInicio: inicio, fechaFin: fin, cerrado: !!cerrado },\r\n      select: { id: true, nombre: true, fechaInicio: true, fechaFin: true, cerrado: true },\r\n    });\r\n    return NextResponse.json(ciclo);\r\n  } catch (error: any) {\r\n    if (error.code && error.code.startsWith('P')) {\r\n      return NextResponse.json({ error: 'Error de base de datos: ' + error.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json({ error: 'Error al editar ciclo' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// DELETE: Elimina un ciclo. Body: { id }\r\nexport async function DELETE(request: Request) {\r\n  try {\r\n    const { id } = await request.json();\r\n    if (typeof id !== 'number' || isNaN(id)) {\r\n      return NextResponse.json({ error: 'Falta el id o el id no es válido' }, { status: 400 });\r\n    }\r\n    await prisma.ciclo.delete({ where: { id } });\r\n    return NextResponse.json({ success: true });\r\n  } catch (error: any) {\r\n    if (error.code && error.code.startsWith('P')) {\r\n      return NextResponse.json({ error: 'Error de base de datos: ' + error.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json({ error: 'Error al eliminar ciclo' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}