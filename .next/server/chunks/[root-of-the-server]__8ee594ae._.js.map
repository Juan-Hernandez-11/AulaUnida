{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ||\r\n  new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6IAAY;AAElB,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/admin/horarios/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\n// GET /api/admin/horarios?gradoId=...&cicloId=...\r\nexport async function GET(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const gradoId = Number(searchParams.get('gradoId'));\r\n  const cicloId = Number(searchParams.get('cicloId'));\r\n  if (!gradoId || !cicloId) {\r\n    return NextResponse.json({ error: 'gradoId y cicloId requeridos' }, { status: 400 });\r\n  }\r\n  // Prisma puede requerir regenerar el cliente si no reconoce cicloId\r\n  const horarios = await prisma.horario.findMany({\r\n    where: {\r\n      gradoId: gradoId,\r\n      cicloId: cicloId,\r\n    },\r\n    include: {\r\n      materia: true,\r\n      docente: { select: { id: true, name: true } },\r\n      aula: true,\r\n    },\r\n    orderBy: [{ dia: 'asc' }, { horaInicio: 'asc' }],\r\n  });\r\n  return NextResponse.json(horarios);\r\n}\r\n\r\n// POST /api/admin/horarios\r\nexport async function POST(req: NextRequest) {\r\n  const data = await req.json();\r\n  const { gradoId, cicloId, materiaId, docenteId, dia, horaInicio, horaFin, aulaId } = data;\r\n  if (!gradoId || !cicloId || !materiaId || !docenteId || !dia || !horaInicio || !horaFin) {\r\n    return NextResponse.json({ error: 'Faltan campos obligatorios' }, { status: 400 });\r\n  }\r\n  // Prisma puede requerir regenerar el cliente si no reconoce cicloId\r\n  const horario = await prisma.horario.create({\r\n    data: {\r\n      gradoId: gradoId,\r\n      cicloId: cicloId,\r\n      materiaId: materiaId,\r\n      docenteId: docenteId,\r\n      dia: dia,\r\n      horaInicio: horaInicio,\r\n      horaFin: horaFin,\r\n      aulaId: aulaId || null,\r\n    },\r\n  });\r\n  return NextResponse.json(horario);\r\n}\r\n\r\n// DELETE /api/admin/horarios?id=...\r\nexport async function DELETE(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const id = Number(searchParams.get('id'));\r\n  if (!id) return NextResponse.json({ error: 'id requerido' }, { status: 400 });\r\n  await prisma.horario.delete({ where: { id } });\r\n  return NextResponse.json({ success: true });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAGO,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,UAAU,OAAO,aAAa,GAAG,CAAC;IACxC,MAAM,UAAU,OAAO,aAAa,GAAG,CAAC;IACxC,IAAI,CAAC,WAAW,CAAC,SAAS;QACxB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACpF;IACA,oEAAoE;IACpE,MAAM,WAAW,MAAM,gIAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7C,OAAO;YACL,SAAS;YACT,SAAS;QACX;QACA,SAAS;YACP,SAAS;YACT,SAAS;gBAAE,QAAQ;oBAAE,IAAI;oBAAM,MAAM;gBAAK;YAAE;YAC5C,MAAM;QACR;QACA,SAAS;YAAC;gBAAE,KAAK;YAAM;YAAG;gBAAE,YAAY;YAAM;SAAE;IAClD;IACA,OAAO,gJAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,KAAK,GAAgB;IACzC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IACrF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS;QACvF,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA6B,GAAG;YAAE,QAAQ;QAAI;IAClF;IACA,oEAAoE;IACpE,MAAM,UAAU,MAAM,gIAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1C,MAAM;YACJ,SAAS;YACT,SAAS;YACT,WAAW;YACX,WAAW;YACX,KAAK;YACL,YAAY;YACZ,SAAS;YACT,QAAQ,UAAU;QACpB;IACF;IACA,OAAO,gJAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,OAAO,GAAgB;IAC3C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,KAAK,OAAO,aAAa,GAAG,CAAC;IACnC,IAAI,CAAC,IAAI,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAe,GAAG;QAAE,QAAQ;IAAI;IAC3E,MAAM,gIAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE;QAAG;IAAE;IAC5C,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAK;AAC3C","debugId":null}}]
}