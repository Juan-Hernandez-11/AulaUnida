{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/config.tsx"],"sourcesContent":["export const firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_API_KEY_FIREBASE,\r\n  authDomain: process.env.NEXT_PUBLIC_AUTHDOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_PROJECTID,\r\n  storageBucket: process.env.NEXT_PUBLIC_STORAGEBUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_MESSAGINGSENDERID,\r\n  appId: process.env.NEXT_PUBLIC_APPID,\r\n  measurementId: process.env.NEXT_PUBLIC_MEASUREMENTID,\r\n};\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,iBAAiB;IAC5B,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/firebaseClient.ts/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const app = registerClientReference(\n    function() { throw new Error(\"Attempted to call app() from the server but app is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebaseClient.ts <module evaluation>\",\n    \"app\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,MAAM,IAAA,wQAAuB,EACtC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/lib/firebaseClient.ts/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const app = registerClientReference(\n    function() { throw new Error(\"Attempted to call app() from the server but app is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/firebaseClient.ts\",\n    \"app\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,MAAM,IAAA,wQAAuB,EACtC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/context/authContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { getAuth, onAuthStateChanged, signOut, User } from 'firebase/auth';\r\nimport { app } from '../lib/firebaseClient';\r\n\r\n// Definimos el tipo de usuario para el contexto\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  loading: boolean;\r\n  logout: () => Promise<void>;\r\n};\r\n\r\n// Creamos el contexto\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n  logout: async () => {},\r\n});\r\n\r\n// Hook para usar el contexto\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Proveedor del contexto de autenticación\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Escuchamos cambios de sesión de Firebase\r\n    const auth = getAuth(app);\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      setUser(firebaseUser);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Función para cerrar sesión\r\n  const logout = async () => {\r\n    const auth = getAuth(app);\r\n    await signOut(auth);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;AACA;;;;;AASA,sBAAsB;AACtB,MAAM,4BAAc,IAAA,sNAAa,EAAkB;IACjD,MAAM;IACN,SAAS;IACT,QAAQ,WAAa;AACvB;AAGO,MAAM,UAAU,IAAM,IAAA,mNAAU,EAAC;AAGjC,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,IAAA,kNAAS,EAAC;QACR,2CAA2C;QAC3C,MAAM,OAAO,IAAA,6KAAO,EAAC,mIAAG;QACxB,MAAM,cAAc,IAAA,wLAAkB,EAAC,MAAM,CAAC;YAC5C,QAAQ;YACR,WAAW;QACb;QACA,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,6BAA6B;IAC7B,MAAM,SAAS;QACb,MAAM,OAAO,IAAA,6KAAO,EAAC,mIAAG;QACxB,MAAM,IAAA,6KAAO,EAAC;QACd,QAAQ;IACV;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAO;kBAClD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/layout.tsx"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/landingpage.css\";\r\nimport \"../app/api/config\";\r\nimport { AuthProvider } from \"../context/authContext\";\r\n\r\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\r\n\treturn (\r\n\t\t<html lang=\"es\">\r\n\t\t\t<body>\r\n\t\t\t\t{/* Proveedor de autenticación global */}\r\n\t\t\t\t<AuthProvider>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</AuthProvider>\r\n\t\t\t</body>\r\n\t\t</html>\r\n\t);\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAiC;IAC7E,qBACC,8OAAC;QAAK,MAAK;kBACV,cAAA,8OAAC;sBAEA,cAAA,8OAAC,8IAAY;0BACX;;;;;;;;;;;;;;;;AAKN","debugId":null}}]
}