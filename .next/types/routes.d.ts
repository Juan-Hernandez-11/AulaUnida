// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/anuncios" | "/admin/asignaturas" | "/admin/aulas" | "/admin/backup" | "/admin/bitacora" | "/admin/ciclos" | "/admin/configuracion" | "/admin/dashboard" | "/admin/docentes" | "/admin/faqs" | "/admin/grados" | "/admin/horarios" | "/admin/materias" | "/admin/matricula" | "/admin/mensajes" | "/admin/reportes" | "/admin/sedes" | "/admin/usuarios" | "/admin/usuarios/listado" | "/docente" | "/docente/notas" | "/estudiante" | "/estudiante/asignaturas" | "/estudiante/boletin" | "/estudiante/horario" | "/estudiante/notas" | "/login"
type AppRouteHandlerRoutes = "/api/admin/asignaturas" | "/api/admin/aulas" | "/api/admin/ciclos" | "/api/admin/dashboard" | "/api/admin/docentes" | "/api/admin/docentes/[id]/asignaciones" | "/api/admin/estudiantes" | "/api/admin/grados" | "/api/admin/horarios" | "/api/admin/materias" | "/api/admin/matricula" | "/api/admin/periodos" | "/api/admin/sedes" | "/api/admin/usuarios" | "/api/docente/asignaciones" | "/api/docente/estudiantes" | "/api/docente/notas" | "/api/estudiante/boletin" | "/api/estudiante/horario" | "/api/estudiante/notas" | "/api/me" | "/api/user-role"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/anuncios": {}
  "/admin/asignaturas": {}
  "/admin/aulas": {}
  "/admin/backup": {}
  "/admin/bitacora": {}
  "/admin/ciclos": {}
  "/admin/configuracion": {}
  "/admin/dashboard": {}
  "/admin/docentes": {}
  "/admin/faqs": {}
  "/admin/grados": {}
  "/admin/horarios": {}
  "/admin/materias": {}
  "/admin/matricula": {}
  "/admin/mensajes": {}
  "/admin/reportes": {}
  "/admin/sedes": {}
  "/admin/usuarios": {}
  "/admin/usuarios/listado": {}
  "/api/admin/asignaturas": {}
  "/api/admin/aulas": {}
  "/api/admin/ciclos": {}
  "/api/admin/dashboard": {}
  "/api/admin/docentes": {}
  "/api/admin/docentes/[id]/asignaciones": { "id": string; }
  "/api/admin/estudiantes": {}
  "/api/admin/grados": {}
  "/api/admin/horarios": {}
  "/api/admin/materias": {}
  "/api/admin/matricula": {}
  "/api/admin/periodos": {}
  "/api/admin/sedes": {}
  "/api/admin/usuarios": {}
  "/api/docente/asignaciones": {}
  "/api/docente/estudiantes": {}
  "/api/docente/notas": {}
  "/api/estudiante/boletin": {}
  "/api/estudiante/horario": {}
  "/api/estudiante/notas": {}
  "/api/me": {}
  "/api/user-role": {}
  "/docente": {}
  "/docente/notas": {}
  "/estudiante": {}
  "/estudiante/asignaturas": {}
  "/estudiante/boletin": {}
  "/estudiante/horario": {}
  "/estudiante/notas": {}
  "/login": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
