{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juant/Documents/proyectoCUN/aulaunida/src/app/api/admin/dashboard/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// GET /api/admin/dashboard\r\nexport async function GET() {\r\n  try {\r\n    // Usuarios activos\r\n    const usuariosActivos = await prisma.user.count({ where: { active: true } });\r\n    // Grados registrados\r\n    const gradosRegistrados = await prisma.grado.count();\r\n    // Anuncios recientes (últimos 30 días)\r\n    const fechaLimite = new Date();\r\n    fechaLimite.setDate(fechaLimite.getDate() - 30);\r\n  const anunciosRecientes = await prisma.anuncio.count({ where: { fecha: { gte: fechaLimite } } });\r\n\r\n    // Actividad reciente (mock: últimos 5 cambios de usuario)\r\n    const actividad = await prisma.cambio.findMany({\r\n      orderBy: { fecha: 'desc' },\r\n      take: 5,\r\n      select: {\r\n        usuario: { select: { name: true } },\r\n        cambio: true,\r\n        fecha: true,\r\n      },\r\n    });\r\n\r\n    return NextResponse.json({\r\n      usuariosActivos,\r\n      gradosRegistrados,\r\n      anunciosRecientes,\r\n      actividad: actividad.map(a => ({\r\n        user: a.usuario?.name || '-',\r\n        action: a.cambio,\r\n        date: a.fecha.toISOString().split('T')[0],\r\n      })),\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en /api/admin/dashboard:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6IAAY;AAGxB,eAAe;IACpB,IAAI;QACF,mBAAmB;QACnB,MAAM,kBAAkB,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC;YAAE,OAAO;gBAAE,QAAQ;YAAK;QAAE;QAC1E,qBAAqB;QACrB,MAAM,oBAAoB,MAAM,OAAO,KAAK,CAAC,KAAK;QAClD,uCAAuC;QACvC,MAAM,cAAc,IAAI;QACxB,YAAY,OAAO,CAAC,YAAY,OAAO,KAAK;QAC9C,MAAM,oBAAoB,MAAM,OAAO,OAAO,CAAC,KAAK,CAAC;YAAE,OAAO;gBAAE,OAAO;oBAAE,KAAK;gBAAY;YAAE;QAAE;QAE5F,0DAA0D;QAC1D,MAAM,YAAY,MAAM,OAAO,MAAM,CAAC,QAAQ,CAAC;YAC7C,SAAS;gBAAE,OAAO;YAAO;YACzB,MAAM;YACN,QAAQ;gBACN,SAAS;oBAAE,QAAQ;wBAAE,MAAM;oBAAK;gBAAE;gBAClC,QAAQ;gBACR,OAAO;YACT;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB;YACA;YACA;YACA,WAAW,UAAU,GAAG,CAAC,CAAA,IAAK,CAAC;oBAC7B,MAAM,EAAE,OAAO,EAAE,QAAQ;oBACzB,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC3C,CAAC;QACH;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}